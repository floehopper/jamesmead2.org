--- 
permalink: fixtures-mock-objects-or-in-memory-activerecord-objects
updated_at: 2006-12-23 20:14:10 +00:00
guid: 865dc197-829e-401b-af2e-4c1e4b7b2794
title: Fixtures, mock objects or in-memory ActiveRecord objects?
id: '124'
filter:
- erb
- textile
categories: []

created_at: 2006-12-23 19:15:59 +00:00
keywords: mock object ruby test unit stub fixture
---
"Wilson Bilkovich":http://metaclass.org/ has posted an article about "mocking ActiveRecord objects":http://metaclass.org/2006/12/22/making-a-mockery-of-activerecord.

A new method @mock_model@ is defined that builds a mock object which will respond the same way as a real @ActiveRecord@ object. As I understand it, this means he can replace...

bc(prettyprint). @campaign = mock("campaign")
@campaign.stub!(:is_a?).and_return(true)
@campaign.stub!(:new_record?).and_return(false)
@campaign.stub!(:id).and_return(rand(1000))

with...

bc(prettyprint). mock_model :campaign

Although "I agree":/blog/2006-06-27-rails-fixtures-help-or-hindrance with him that using fixtures is not a good idea, why not use a real @ActiveRecord@ object...

bc(prettyprint). @campaign = Campaign.new

Sometimes due to the way @ActiveRecord@ couples your models to the database, it becomes essential to have a model in the database and not just in memory. In which case why not just do this...

bc(prettyprint). @campaign = Campaign.create!

I've written up a couple more thoughts "here":/blog/2006-12-23-stub-queries-and-expect-commands and "here":/blog/2006-12-23-tell-dont-ask.
